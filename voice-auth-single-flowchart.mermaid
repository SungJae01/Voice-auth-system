flowchart TD

%% ===== 1차 인증 (UI) =====
subgraph UI["UI (Main Thread)"]
  A["사용자 접근 감지 클릭"] --> B["애니메이션 시작<br/>'녹음중' 표시·효과음"]
  B --> C["RecordWorker 시작 (login.wav)"]
  C -- "ok=False" --> C1["에러 음향·GIF<br/>음성 미감지"] --> C2["종료"]
  C -- "ok=True" --> D["process_first_auth()"]

  D --> D0{"프로필 존재?"}
  D0 -- "No" --> D01["에러 음향·GIF<br/>프로필 없음"] --> D02["종료"]
  D0 -- "Yes" --> D1["프로필별 유사도 계산<br/>(ECAPA + Wav2Vec2+Pitch)"]
  D1 --> D2{"최고 점수 ≥ 0.5?"}
  D2 -- "No" --> D3["에러 음향·GIF<br/>등록되지 않은 음성"] --> D4["메시지 3초 후 클리어"]
  D2 -- "Yes" --> D5["성공 GIF<br/>'1차 인증 성공'"]
  D5 --> D6["start_second_auth(best_match)"]
  D5 --> D7["NodeMCU에 PING/STATUS 시도"]
end

%% ===== 2차 인증 워커 =====
subgraph W["SecondAuthWorker (QThread)"]
  E["second.wav 녹음"] --> E1{"음성 감지?"}
  E1 -- "No" --> E2["emit(False, '음성 미감지')"]
  E1 -- "Yes" --> E3["Whisper STT"]
  E3 --> E5["문장 의미 비교 (semantic)"]
  E5 -- "불일치" --> E6["emit(False, '문장 의미 불일치')"]
  E5 -- "일치" --> E7["화자 유사도 비교 (앙상블)"]
  E7 --> E9{"점수 ≥ 0.5?"}
  E9 -- "No" --> E10["emit(False, '남은 시도 n-1회')"]
  E9 -- "Yes" --> E11["emit(True, '{user}님 안녕하세요!<br/>도어락이 열렸습니다')"]
end

%% ===== 2차 결과 처리 (UI) =====
subgraph H["on_second_auth_finished (UI)"]
  F["챌린지 라벨 숨김·결과 GIF"] --> F1["status_label = message<br/>버튼 활성화"]
  F1 --> F2{"success?"}
  F2 -- "No" --> F3["second_attempts -= 1<br/>메시지 3초 후 클리어"] --> F4["대기/재시도"]
  F2 -- "Yes" --> F5["메시지 5초 후 클리어"] --> F6["NodeMCU 제어"]
end

%% ===== NodeMCU 제어 =====
subgraph N["NodeMCU 제어"]
  F6 --> N1["OPEN 7000 (릴레이 펄스)"]
  N1 --> N2["STATUS 폴링 ×8 (0.4s)"]
  N2 -- "예외" --> N3["UI에 'NodeMCU 연결 실패' 표시"]
end

%% 루프백
F4 --> A
